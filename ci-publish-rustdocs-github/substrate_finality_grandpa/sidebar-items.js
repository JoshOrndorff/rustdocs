initSidebarItems({"enum":[["Error","Errors that can occur while voting in GRANDPA."]],"fn":[["block_import","Make block importer and link half necessary to tie the background voter to it."],["light_block_import","Create light block importer."],["run_grandpa",""],["run_grandpa_observer","Run a GRANDPA observer as a task, the observer will finalize blocks only by listening for and validating GRANDPA commits instead of following the full protocol. Provide configuration and a link to a block import worker that has already been instantiated with `block_import`."],["run_grandpa_voter","Run a GRANDPA voter as a task. Provide configuration and a link to a block import worker that has already been instantiated with `block_import`."]],"struct":[["Config","Configuration for the GRANDPA service."],["FinalityProofProvider","Finality proof provider for serving network requests."],["GrandpaParams","Parameters used to run Grandpa."],["LinkHalf",""],["ScheduledChange","A scheduled change of authority set."]],"trait":[["BlockStatus","Something which can determine if a block is known."],["Network","A handle to the network. This is generally implemented by providing some handle to a gossip service or similar."]],"type":[["AuthorityId","Identity of a Grandpa authority."],["BlockImportForLightService",""],["BlockImportForService",""],["Commit","A commit message for this chain's block type."],["CompactCommit","A compact commit message for this chain's block type."],["LinkHalfForService",""],["Message","A GRANDPA message for a substrate chain."],["Precommit","A precommit message for this chain's block type."],["Prevote","A prevote message for this chain's block type."],["PrimaryPropose","A primary propose message for this chain's block type."],["SignedMessage","A signed message."]]});