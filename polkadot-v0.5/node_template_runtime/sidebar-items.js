initSidebarItems({"constant":[["DAYS",""],["EPOCH_DURATION_IN_BLOCKS",""],["HOURS",""],["MILLISECS_PER_BLOCK","Constants for Babe. Since BABE is probabilistic this is the average expected block time that we are targetting. Blocks will be produced at a minimum duration defined by `SLOT_DURATION`, but some slots will not be allocated to any authority and hence no block will be produced. We expect to have this block time on average following the defined slot duration and the value of `c` configured for BABE (where `1 - c` represents the probability of a slot being empty). This value is only used indirectly to define the unit constants below that are expressed in blocks. The rest of the code should use `SLOT_DURATION` instead (like the timestamp module for calculating the minimum period). https://research.web3.foundation/en/latest/polkadot/BABE/Babe/#6-practical-results"],["MINUTES",""],["PRIMARY_PROBABILITY",""],["SLOT_DURATION",""],["VERSION","This runtime version."],["WASM_BINARY",""],["WASM_BINARY_BLOATY",""]],"enum":[["BalancesCall",""],["Call",""],["Event",""],["Origin",""],["TimestampCall",""]],"fn":[["native_version","The version infromation used to identify this runtime when compiled natively."]],"macro":[["construct_runtime","Construct a runtime, with the given name and the given modules."],["parameter_types","Macro for easily creating a new implementation of the `Get` trait. Use similarly to how you would declare a `const`:"]],"mod":[["api",""],["opaque","Opaque types. These are used by the CLI to instantiate machinery that don't need to know the specifics of the runtime. They can then be made to be agnostic over specific formats of data like extrinsics, allowing for them to continue syncing the network through upgrades to even the core datastructures."]],"struct":[["AvailableBlockRatio",""],["BlockHashCount",""],["CreationFee",""],["EpochDuration",""],["ExistentialDeposit",""],["ExpectedBlockTime",""],["GenesisConfig",""],["MaximumBlockLength",""],["MaximumBlockWeight",""],["MinimumPeriod",""],["Perbill","Perbill is parts-per-billion. It stores a value between 0 and 1 in fixed point and provides a means to multiply some other value by that."],["Permill","Permill is parts-per-million (i.e. after multiplying by this, divide by 1000000)."],["Runtime",""],["RuntimeApi",""],["RuntimeApiImpl","Implements all runtime apis for the client side."],["TransactionBaseFee",""],["TransactionByteFee",""],["TransferFee",""],["Version",""]],"trait":[["BuildStorage","Complex storage builder stuff."],["StorageValue","A trait for working with macro-generated storage values under the substrate storage API."]],"type":[["AccountId","Some way of identifying an account on the chain. We intentionally make it equivalent to the public key of our transaction signing scheme."],["AccountIndex","The type for looking up accounts. We don't expect more than 4 billion of them, but you never know..."],["Address","The address format for describing accounts."],["Babe",""],["BabeConfig",""],["Balance","Balance of an account."],["Balances",""],["BalancesConfig",""],["Block","Block type as expected by this runtime."],["BlockId","BlockId type as expected by this runtime."],["BlockNumber","An index to a block."],["CheckedExtrinsic","Extrinsic type that has already been checked."],["DigestItem","Digest item type."],["Executive","Executive: handles dispatch to the various modules."],["Grandpa",""],["GrandpaConfig",""],["Hash","A hash of some data used by the chain."],["Header","Block header type as expected by this runtime."],["Index","Index of a transaction in the chain."],["Indices",""],["IndicesConfig",""],["Signature","Alias to 512-bit hash when used in the context of a transaction signature on the chain."],["SignedBlock","A Block signed with a Justification"],["SignedExtra","The SignedExtension to the basic transaction logic."],["Sudo",""],["SudoConfig",""],["System",""],["SystemConfig",""],["TemplateModule",""],["Timestamp",""],["UncheckedExtrinsic","Unchecked extrinsic type as expected by this runtime."]]});