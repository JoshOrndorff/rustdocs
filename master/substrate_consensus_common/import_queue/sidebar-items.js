initSidebarItems({"enum":[["BlockImportError","Block import error."],["BlockImportResult","Block import successful result."]],"fn":[["buffered_link","Wraps around an unbounded channel from the `futures` crate. The sender implements `Link` and can be used to buffer commands, and the receiver can be used to poll said commands and transfer them to another link."],["import_single_block","Single block import function."]],"struct":[["BasicQueue","Interface to a basic block import queue that is importing blocks sequentially in a separate task, with pluggable verification."],["BufferedLinkReceiver","See [`buffered_link`]."],["BufferedLinkSender","See [`buffered_link`]."],["IncomingBlock","Block data used by the queue."]],"trait":[["ImportQueue","Blocks import queue API."],["Link","Hooks that the verification queue can use to influence the synchronization algorithm."],["Verifier","Verify a justification of a block"]],"type":[["Origin","Maps to the Origin used by the network."],["SharedBlockImport","Shared block import struct used by the queue."],["SharedFinalityProofImport","Shared finality proof import struct used by the queue."],["SharedFinalityProofRequestBuilder","Shared finality proof request builder struct used by the queue."],["SharedJustificationImport","Shared justification import struct used by the queue."]]});