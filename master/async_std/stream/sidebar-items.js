initSidebarItems({"fn":[["empty","Creates a stream that doesn't yield any items."],["extend","Extends a collection with the contents of a stream."],["from_fn","Creates a new stream where to produce each new element a provided closure is called."],["from_iter","Converts an iterator into a stream."],["interval","Creates a new stream that yields at a set interval."],["once","Creates a stream that yields a single item."],["repeat","Creates a stream that yields the same item repeatedly."],["repeat_with","Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure."],["successors","Creates a new stream where to produce each new element a closure is called with the previous value."]],"mod":[["stream","Asynchronous iteration."]],"struct":[["Empty","A stream that doesn't yield any items."],["FromFn","A stream that yields elements by calling a closure."],["FromIter","A stream that was created from iterator."],["Interval","A stream representing notifications at fixed interval"],["Merge","A stream that merges two other streams into a single stream."],["Once","A stream that yields a single item."],["Repeat","A stream that yields the same item repeatedly."],["RepeatWith","A stream that repeats elements of type `T` endlessly by applying a provided closure."],["Successors","A stream that yields elements by calling an async closure with the previous value as an argument"]],"trait":[["DoubleEndedStream","A stream able to yield elements from both ends."],["ExactSizeStream","A stream that knows its exact length."],["Extend","Extends a collection with the contents of a stream."],["FromStream","Conversion from a `Stream`."],["FusedStream","A stream that always continues to yield `None` when exhausted."],["IntoStream","Conversion into a `Stream`."],["Product","Trait to represent types that can be created by multiplying the elements of a stream."],["Sum","Trait to represent types that can be created by summing up a stream."]]});