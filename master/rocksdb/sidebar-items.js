initSidebarItems({"enum":[["BlockBasedIndexType","Used by BlockBasedOptions::set_index_type."],["DBCompactionStyle",""],["DBCompressionType",""],["DBRecoveryMode",""],["Direction",""],["IteratorMode",""],["MemtableFactory","Defines the underlying memtable implementation. See https://github.com/facebook/rocksdb/wiki/MemTable for more information."]],"fn":[["new_bloom_filter",""]],"mod":[["backup",""],["checkpoint",""],["compaction_filter",""],["merge_operator","rustic merge operator"]],"struct":[["BlockBasedOptions","For configuring block-based file storage."],["ColumnFamily","An opaque type used to represent a column family. Returned from some functions, and used in others"],["ColumnFamilyDescriptor","A descriptor for a RocksDB column family."],["DB","A RocksDB database."],["DBIterator","An iterator over a database or column family, with specifiable ranges and direction."],["DBRawIterator","An iterator over a database or column family, with specifiable ranges and direction."],["DBVector","Vector of bytes stored in the database."],["Error","A simple wrapper round a string, used for errors reported from ffi calls."],["Options","Database-wide options around performance and behavior."],["ReadOptions",""],["SliceTransform","A SliceTranform is a generic pluggable way of transforming one string to another. Its primary use-case is in configuring rocksdb to store prefix blooms by setting prefix_extractor in ColumnFamilyOptions."],["Snapshot","A consistent view of the database at the point of creation."],["WriteBatch","An atomic batch of write operations."],["WriteOptions","Optionally disable WAL or sync for this write."]]});