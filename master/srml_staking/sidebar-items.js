initSidebarItems({"enum":[["Call",""],["Forcing","Mode of era-forcing."],["RawEvent","Events for this module."],["RewardDestination","A destination account for payment."],["StakerStatus","Indicates the initial status of the staker."]],"mod":[["inflation","This module expose one function `P_NPoS` (Payout NPoS) or `compute_total_payout` which returns the total payout for the era given the era duration and the staking rate in NPoS. The staking rate in NPoS is the total amount of tokens staked by nominators and validators, divided by the total token supply."]],"struct":[["Bonded","Map from all locked \"stash\" accounts to the controller account."],["CurrentElected","The currently elected validator set keyed by stash account ID."],["CurrentElectedStashAccounts","Returns the currently elected validator set represented by their stash accounts."],["CurrentEra","The current era index."],["CurrentEraStart","The start of the current era."],["CurrentEraStartSessionIndex","The session index at which the current era started."],["EraPoints","Reward points of an era. Used to split era total payout between validators."],["Exposure","A snapshot of the stake backing a single validator in the system."],["ExposureOf","A typed conversion from stash account ID to the current exposure of nominators on that account."],["FilterHistoricalOffences","Filter historical offences out and only allow those from the current era."],["ForceEra","True if the next session change will be a new era regardless of index."],["GenesisConfig",""],["IndividualExposure","The amount of exposure (to slashing) than an individual nominator has."],["Invulnerables","Any validators that may never be slashed or forcibly kicked. It's a Vec since they're easy to initialize and the performance hit is minimal (we expect no more than four invulnerables) and restricted to testnets."],["Ledger","Map from all (unlocked) \"controller\" accounts to the info regarding the staking."],["MinimumValidatorCount","Minimum number of staking participants before emergency conditions are imposed."],["Module",""],["Nominators","The map from nominator stash key to the set of stash keys of all validators to nominate."],["Payee","Where the reward payment should be made. Keyed by stash."],["SlashJournalEntry","A slashing event occurred, slashing a validator for a given amount of balance."],["SlashRewardFraction","The percentage of the slash that is distributed to reporters."],["SlotStake","The amount of balance actively at stake for each validator slot, currently."],["Stakers","Nominators for a particular account that is in action right now. You can't iterate through validators here, but you can find them in the Session module."],["StakingLedger","The ledger of a (bonded) stash."],["StashOf","A `Convert` implementation that finds the stash of the given controller account, if any."],["UnlockChunk","Just a Balance/BlockNumber tuple to encode when a chunk of funds will be unlocked."],["ValidatorCount","The ideal number of staking participants."],["ValidatorPrefs","Preference of what happens on a slash event."],["Validators","The map from (wannabe) validator stash key to the preferences of that validator."]],"trait":[["SessionInterface","Means for interacting with a specialized version of the `session` trait."],["Trait",""]],"type":[["BalanceOf",""],["EraIndex","Counter for the number of eras that have passed."],["Event","[`RawEvent`] specialized for the configuration [`Trait`]"],["Points","Counter for the number of \"reward\" points earned by a given validator."]]});