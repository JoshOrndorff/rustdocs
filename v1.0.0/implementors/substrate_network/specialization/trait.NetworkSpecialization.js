(function() {var implementors = {};
implementors["node_template"] = [{"text":"impl <a class=\"trait\" href=\"substrate_network/specialization/trait.NetworkSpecialization.html\" title=\"trait substrate_network::specialization::NetworkSpecialization\">NetworkSpecialization</a>&lt;<a class=\"struct\" href=\"sr_primitives/generic/block/struct.Block.html\" title=\"struct sr_primitives::generic::block::Block\">Block</a>&lt;<a class=\"struct\" href=\"sr_primitives/generic/header/struct.Header.html\" title=\"struct sr_primitives::generic::header::Header\">Header</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"sr_primitives/traits/struct.BlakeTwo256.html\" title=\"struct sr_primitives::traits::BlakeTwo256\">BlakeTwo256</a>, <a class=\"enum\" href=\"sr_primitives/generic/digest/enum.DigestItem.html\" title=\"enum sr_primitives::generic::digest::DigestItem\">DigestItem</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>, &lt;<a class=\"struct\" href=\"substrate_primitives/ed25519/struct.Signature.html\" title=\"struct substrate_primitives::ed25519::Signature\">Signature</a> as <a class=\"trait\" href=\"sr_primitives/traits/trait.Verify.html\" title=\"trait sr_primitives::traits::Verify\">Verify</a>&gt;::<a class=\"type\" href=\"sr_primitives/traits/trait.Verify.html#associatedtype.Signer\" title=\"type sr_primitives::traits::Verify::Signer\">Signer</a>, <a class=\"struct\" href=\"substrate_primitives/ed25519/struct.Signature.html\" title=\"struct substrate_primitives::ed25519::Signature\">Signature</a>&gt;&gt;, <a class=\"struct\" href=\"node_template_runtime/opaque/struct.UncheckedExtrinsic.html\" title=\"struct node_template_runtime::opaque::UncheckedExtrinsic\">UncheckedExtrinsic</a>&gt;&gt; for <a class=\"struct\" href=\"node_template/service/struct.NodeProtocol.html\" title=\"struct node_template::service::NodeProtocol\">NodeProtocol</a>","synthetic":false,"types":["node_template::service::NodeProtocol"]}];
implementors["substrate_network"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()