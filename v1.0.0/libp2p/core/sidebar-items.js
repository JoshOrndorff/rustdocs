initSidebarItems({"enum":[["Endpoint",""],["ProtocolsHandlerEvent","Event produced by a handler."],["PublicKey","The public key of a node's identity keypair."],["UpgradeError","Error that can happen when upgrading a connection or substream to use a protocol."]],"fn":[["address_translation","Perform IP address translation."]],"mod":[["either",""],["identity","A node's network identity keys."],["multiaddr",""],["muxing","Muxing is the process of splitting a connection into multiple substreams."],["nodes","Low-level networking primitives."],["protocols_handler","Once a connection to a remote peer is established, a `ProtocolsHandler` negotiates and handles one or more specific protocols on the connection."],["swarm","High level manager of the network."],["transport","Connection-oriented communication channels."],["upgrade","Contains everything related to upgrading a connection or a substream to use a protocol."]],"struct":[["Multiaddr","Representation of a Multiaddr."],["Negotiated","A stream after it has been negotiated."],["PeerId","Identifier of a peer of the network."]],"trait":[["InboundUpgrade","Possible upgrade on an inbound connection or substream."],["OutboundUpgrade","Possible upgrade on an outbound connection or substream."],["ProtocolName","Types serving as protocol names."],["ProtocolsHandler","A handler for a set of protocols used on a connection with a remote."],["StreamMuxer","Implemented on objects that can open and manage substreams."],["Transport","A transport provides connection-oriented communication between two peers through ordered streams of data (i.e. connections)."],["UpgradeInfo","Common trait for upgrades that can be applied on inbound substreams, outbound substreams, or both."]],"type":[["Swarm","Contains the state of the network, plus the way it should behave."]]});